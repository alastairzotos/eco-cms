------------------------------------------------
Features:
------------------------------------------------

Pages:
    - Add pages
    - Edit ecoML for each page and head tag data
    - Preview
    - Publish
    - View pages
    - Multiple pages for multi-armed bandit algo


------------------------------------------------
Sprints:
------------------------------------------------

Sprint 1:
    - [DONE] Register and log in
    - [DONE] Back office skeleton
    - [DONE] Add and load pages
    - [DONE] Edit pages
    - [DONE] View rendered pages
    - [DONE] Evaluate html to internal html class, use react renderer on that
    - [DONE] Supply components. Plugin modules on front-end
    - [DONE] Plugin modules on back-end

Sprint 2:
    - [DONE] Multi-armed bandit
    - [DONE] Preview pages
    - [DONE] Publish pages. Confirm save unsaved changes first
    - [DONE] redux-persist
    - [DONE] Head tag data

Sprint 3:
    - [DONE] Error boundary around rendered pages
    - [DONE] Delete pages
    - [DONE] Rearrange pages
    - [DONE] 404 page
    - [REMOVED] Themes

Sprint 4: File manager
    - [DONE] Add files
    - [DONE] Add multiple files
    - [DONE] Move to own module
    - [DONE] Dropzone

Sprint 5:
    - [DONE] Browse folders
    - [DONE] Browse files
    - [DONE] List file UI
    - [DONE] Download files
    - [DONE] Refactor admin module to have separate modules for each app

Sprint 6:
    - [DONE] Preview files
    - [DONE] Update file names
    - Delete/move files
    - Update folder names
    - Add/delete/move folders
    - Better upload
    - Upload progress

Sprint 7:
    - Redis cache, especially for images
    - Front-end modules should choose if their state is persisted
    - Find port from front-end for fetch requests and maybe an <Image /> component
    - Handle JWT expiration (https://gist.github.com/soulmachine/b368ce7292ddd7f91c15accccc02b8df)
    - Front-end service
    - Integrate Google analytics
    - Front-end .env
    - npm run build
    - Publish to npm